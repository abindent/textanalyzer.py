"""
Django settings for textanalyzer project.

Generated by 'django-admin startproject' using Django 4.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/

"""

# PYTHON BUILT IN MODULES
import os
from pathlib import Path

# EXTERNAL MODULES
import mimetypes

# CUSTOM CONSTANT VARIABLES
from textanalyzer import constants

# CLOUDINARY
import cloudinary
import cloudinary.uploader
import cloudinary.api

# EXTERNAL MODULE FOR LOADING ENVs
from dotenv import load_dotenv

# Loading envs
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("DJANGO_SECRET_KEY")

# APP CONFIG VARS

# DJANGO SITE ID
SITE_ID = constants.Django.SITE_ID

# DEFAULT APP PROTOCOL
ACCOUNT_DEFAULT_HTTP_PROTOCOL = 'https'

# THE HOSTS THE APPLICATION CAN USE
ALLOWED_HOSTS = constants.Django.ALLOWED_HOSTS

# CSRF ORIGINS THOSE ARE ABLE FOR BEING TRUSTED BY THE APP
CSRF_TRUSTED_ORIGINS = constants.Django.CSRF_TRUSTED_ORIGINS


# SETTING ASYNC VIEW SETTINGS
os.environ["DJANGO_ALLOW_ASYNC_UNSAFE"] = "true"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = bool(os.getenv("DEBUG"))

# DJANGO APPLICATION TO MANAGE THE APPS
INSTALLED_APPS = constants.Django.INSTALLED_APPS

# DJANGO MIDDLEWARE CONFIGURURATION
MIDDLEWARE = constants.Django.MIDDLEWARES

# DJNAGO ROOT URL CONFIGURURATION
ROOT_URLCONF = 'textanalyzer.urls'

# DJANGO TEMPLATE CONFIGURURATION
TEMPLATES = [constants.Django.get_default_template(BASE_DIR=BASE_DIR), ]


AUTHENTICATION_BACKENDS = constants.Django.AUTHENTICATION_BACKENDS


WSGI_APPLICATION = 'textanalyzer.wsgi.application'

# EMAIL SETUP
# ANYMAIL CONFIGURATIOn
ANYMAIL = {
    "SENDINBLUE_API_KEY": os.getenv("SENDINBLUE_API_KEY"),
}

# SMTP CONFIGURATION
EMAIL_BACKEND = 'anymail.backends.sendinblue.EmailBackend'
EMAIL_HOST = 'smtp-relay.sendinblue.com'
EMAIL_PORT = '587'
EMAIL_HOST_USER = os.getenv("EMAIL_HOST")
DEFAULT_FROM_EMAIL = os.getenv("EMAIL_HOST")
SERVER_EMAIL = os.getenv("EMAIL_HOST")


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = constants.Django.get_database(BASE_DIR=BASE_DIR)


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = constants.Django.AUTH_PASSWORD_VALIDATORS

# SOCIAL AUTH CONFIGURATION
ACCOUNT_EMAIL_REQUIRED = True
LOGIN_REDIRECT_URL = "/user/dashboard"
SOCIALACCOUNT_PROVIDERS = constants.SocialAuth.PROVIDERS

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'

# MEDIA
MEDIA_URL = 'media/'

# NEW CONFIG
if DEBUG:
    STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]
    MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

else:
    STATIC_ROOT = os.path.join(BASE_DIR, 'static')
    MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# JAZZMIN CONFIGURATION

# JAZZMIN_SETTINGS
JAZZMIN_SETTINGS = constants.Jazzmin.SETTINGS


# JAZZMIN UI CONFIG
JAZZMIN_UI_TWEAKS = constants.Jazzmin.UI_TWEAKS

# COMPRESSOR CONFIG
COMPRESS_ROOT = BASE_DIR / 'static'

COMPRESS_ENABLED = True

STATICFILES_FINDERS = ('compressor.finders.CompressorFinder',)

# CLOUDINARY CONFIGURATION
cloudinary.config(
    cloud_name=constants.Cloudinary.cloud_name,
    api_key=constants.Cloudinary.api_key,
    api_secret=constants.Cloudinary.api_secret
)

# RECAPTCHA
RECAPTCHA_PUBLIC_KEY = constants.Recaptcha.sitekey
RECAPTCHA_PRIVATE_KEY = constants.Recaptcha.secretKey

